#!/usr/bin/env ruby

# May you recognize your weaknesses and share your strengths.
# May you share freely, never taking more than you give.
# May you find love and love everyone you find.

require 'englify'
require 'json'
require 'net/http'
require 'optparse'
require 'uri'

PERIOD_OPTIONS = ['7day', '3month', '6month', '12month', 'overall']
STAT_OPTIONS = ['artists', 'albums', 'tracks']
API_KEY = 'c7089003368bef3c8d0dd12ceede4978'
period = 'overall'
statistic = 'artists'
limit = 10
autoTranslate = true

begin
	OptionParser.new do |opts|
		opts.banner = "Usage: #{$0.split('/').last} [options] [USER]"
		
		opts.on('-l', '--limit NUM', Integer, 'Number of artists to show.  '\
											 +'0 is all.  Defaults to 10.') do |num|
			# We should actually restrict the range a bit.  Using a really, really
			# big number causes the API to return no tracks at all.
			limit = num
		end
		
		opts.on('--no-translate', "Don't auto-translate foreign artist names.") do
			autoTranslate = false
		end
		
		opts.on('-p', '--period PERIOD', PERIOD_OPTIONS,
				"Time period to show.  Choices: #{PERIOD_OPTIONS.join(',')}") do |p|
			period = p
		end
		
		opts.on('-s', '--statistic STATISTIC', STAT_OPTIONS,
				"Statistic to show.  Choices: #{STAT_OPTIONS.join(',')}") do |s|
			statistic = s
		end
		
		opts.on('-v', '--version', 'Show the installed version of lastfm-top.') do
			puts 'lastfm-top 0.2.0'
			exit 0
		end
		
		opts.on_tail('-h', '--help', 'Show this help dialog.') do
			puts opts
			exit 0
		end
	end.parse!
rescue OptionParser::InvalidArgument,
       OptionParser::InvalidOption,
       OptionParser::MissingArgument => e
	puts e
	exit 255
end

user = ARGV[-1] || 'xiongchiamiov'

url = URI.parse("http://ws.audioscrobbler.com/2.0/?api_key=#{API_KEY}&format=json&method=user.gettop#{statistic}&user=#{user}&period=#{period}&limit=#{limit}")
json = Net::HTTP.get_response(url).body
results = JSON.parse(json)

if results['error']
	puts "Uh oh, something went wrong: #{results['message']}"
	exit results['error']
end

stats = results["top#{statistic}"][statistic.chop] # Chop off the 's'
stats.each do |stat|
	if autoTranslate && !stat['name'].ascii_only?
		stat['name'] = englify(stat['name'])
	end
	# This could look a lot nicer.  There's also some additional information
	# available that differs depending on the statistic we're looking at.
	puts "#{stat['name']} - #{stat['playcount']}"
end

